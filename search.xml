<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/2022/03/18/%E6%B5%8B%E8%AF%95/"/>
      <url>/2022/03/18/%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>邮件发送</title>
      <link href="/2022/03/15/%E9%82%AE%E4%BB%B6%E5%8F%91%E9%80%81/"/>
      <url>/2022/03/15/%E9%82%AE%E4%BB%B6%E5%8F%91%E9%80%81/</url>
      
        <content type="html"><![CDATA[<h2 id="邮件发送"><a href="#邮件发送" class="headerlink" title="邮件发送"></a>邮件发送</h2><p>现在实现的邮件发送功能，如果学到后面就是几行代码的事情，但现在就是要写一大堆代码来深度理解这个过程，过程是痛苦的，但是习惯就好。</p><h3 id="1-邮件可以分为简单邮件和复杂邮件"><a href="#1-邮件可以分为简单邮件和复杂邮件" class="headerlink" title="1.邮件可以分为简单邮件和复杂邮件"></a>1.邮件可以分为简单邮件和复杂邮件</h3><p>简单邮件：没有附件和图片，纯文本文件。</p><p>复杂邮件：有附件也有图片。</p><p>目前除了QQ邮箱免费之外，其他邮箱基本都有收费，而想要实现邮件发送功能，必须开启邮箱里面</p><p>POP3/SMTP服务 。开启之后自动生成授权码，过期就去重新弄个新的。</p><h3 id="2-准备工作"><a href="#2-准备工作" class="headerlink" title="2.准备工作"></a>2.准备工作</h3><h4 id="2-1导入jar包"><a href="#2-1导入jar包" class="headerlink" title="2.1导入jar包"></a>2.1导入jar包</h4><p>1.activation-1.1.1.jar</p><p>2.mail-1.4.7.jar</p><h3 id="3-邮件发送实现"><a href="#3-邮件发送实现" class="headerlink" title="3.邮件发送实现"></a>3.邮件发送实现</h3><h4 id="3-1发送简单邮件"><a href="#3-1发送简单邮件" class="headerlink" title="3.1发送简单邮件"></a>3.1发送简单邮件</h4><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>    <span class="token class-name">Properties</span> prop <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Properties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    prop<span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span><span class="token string">"mail.host"</span><span class="token punctuation">,</span><span class="token string">"smtp.qq.com"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    prop<span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span><span class="token string">"mail.transport.protocol"</span><span class="token punctuation">,</span><span class="token string">"smtp"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    prop<span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span><span class="token string">"mail.smtp.auth"</span><span class="token punctuation">,</span><span class="token string">"true"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">//QQ邮箱，还要设置SSL加密，加入以下代码即可，其他邮箱不需要</span>    <span class="token class-name">MailSSLSocketFactory</span> sf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MailSSLSocketFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    sf<span class="token punctuation">.</span><span class="token function">setTrustAllHosts</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    prop<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"mail.smtp.ssl.enable"</span><span class="token punctuation">,</span><span class="token string">"true"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    prop<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"mail.smtp.ssl.socketFactory"</span><span class="token punctuation">,</span>sf<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">//使用JavaMail发送邮件的四个步骤</span>    <span class="token comment">//1.创建定义整个应用程序所需的环境信息的Session对象(这个Session和JavaWeb里的session不一样)</span>    <span class="token comment">//QQ才有！！！其他邮箱不用</span>    <span class="token class-name">Session</span> session <span class="token operator">=</span> <span class="token class-name">Session</span><span class="token punctuation">.</span><span class="token function">getDefaultInstance</span><span class="token punctuation">(</span>prop<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Authenticator</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">public</span> <span class="token class-name">PasswordAuthentication</span> <span class="token function">getPasswordAuthentication</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">PasswordAuthentication</span><span class="token punctuation">(</span><span class="token string">"516303117@qq.com"</span><span class="token punctuation">,</span><span class="token string">"auldwkjfmjwpbicd"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//开启session的debug模式，这样就可以查看到程序发送Email的运行状态</span>    session<span class="token punctuation">.</span><span class="token function">setDebug</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">//2.通过session得到transport对象</span>    <span class="token class-name">Transport</span> ts <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">getTransport</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//3.使用邮箱的用户名和授权码连上邮件服务器</span>    ts<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token string">"smtp.qq.com"</span><span class="token punctuation">,</span><span class="token string">"516303117@qq.com"</span><span class="token punctuation">,</span><span class="token string">"auldwkjfmjwpbicd"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">//4.创建邮件：写邮件</span>    <span class="token comment">//注意需要传递Session</span>    <span class="token class-name">MimeMessage</span> message <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MimeMessage</span><span class="token punctuation">(</span>session<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">//指明邮件的发件人</span>    message<span class="token punctuation">.</span><span class="token function">setFrom</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">InternetAddress</span><span class="token punctuation">(</span><span class="token string">"516303117@qq.com"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//指明邮件的收件人,自己给自己发</span>    message<span class="token punctuation">.</span><span class="token function">setRecipient</span><span class="token punctuation">(</span><span class="token class-name">Message<span class="token punctuation">.</span>RecipientType</span><span class="token punctuation">.</span>TO<span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">InternetAddress</span><span class="token punctuation">(</span><span class="token string">"857649279@qq.com"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    message<span class="token punctuation">.</span><span class="token function">setSubject</span><span class="token punctuation">(</span><span class="token string">"Java邮件发送测试"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//邮件的标题</span>    message<span class="token punctuation">.</span><span class="token function">setContent</span><span class="token punctuation">(</span><span class="token string">"&lt;h1 style='color:red'&gt;全体目光向我看齐！！！&lt;/h1&gt;"</span><span class="token punctuation">,</span><span class="token string">"text/html;charset=UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//邮件内容</span>    <span class="token comment">//5.发送邮件</span>    ts<span class="token punctuation">.</span><span class="token function">sendMessage</span><span class="token punctuation">(</span>message<span class="token punctuation">,</span>message<span class="token punctuation">.</span><span class="token function">getAllRecipients</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//6.关闭连接</span>    ts<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h4 id="3-2发送带图片的复杂邮件"><a href="#3-2发送带图片的复杂邮件" class="headerlink" title="3.2发送带图片的复杂邮件"></a>3.2发送带图片的复杂邮件</h4><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>    <span class="token class-name">Properties</span> prop <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Properties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    prop<span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span><span class="token string">"mail.host"</span><span class="token punctuation">,</span><span class="token string">"smtp.qq.com"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    prop<span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span><span class="token string">"mail.transport.protocol"</span><span class="token punctuation">,</span><span class="token string">"smtp"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    prop<span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span><span class="token string">"mail.smtp.auth"</span><span class="token punctuation">,</span><span class="token string">"true"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//QQ邮箱，还要设置SSL加密，加入以下代码即可，其他邮箱不需要</span>    <span class="token class-name">MailSSLSocketFactory</span> sf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MailSSLSocketFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    sf<span class="token punctuation">.</span><span class="token function">setTrustAllHosts</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    prop<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"mail.smtp.ssl.enable"</span><span class="token punctuation">,</span><span class="token string">"true"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    prop<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"mail.smtp.ssl.socketFactory"</span><span class="token punctuation">,</span>sf<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//使用JavaMail发送邮件的四个步骤</span>    <span class="token comment">//1.创建定义整个应用程序所需的环境信息的Session对象(这个Session和JavaWeb里的session不一样)</span>    <span class="token comment">//QQ才有！！！其他邮箱不用</span>    <span class="token class-name">Session</span> session <span class="token operator">=</span> <span class="token class-name">Session</span><span class="token punctuation">.</span><span class="token function">getDefaultInstance</span><span class="token punctuation">(</span>prop<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Authenticator</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">public</span> <span class="token class-name">PasswordAuthentication</span> <span class="token function">getPasswordAuthentication</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">PasswordAuthentication</span><span class="token punctuation">(</span><span class="token string">"516303117@qq.com"</span><span class="token punctuation">,</span><span class="token string">"auldwkjfmjwpbicd"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//开启session的debug模式，这样就可以查看到程序发送Email的运行状态</span>    session<span class="token punctuation">.</span><span class="token function">setDebug</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//2.通过session得到transport对象</span>    <span class="token class-name">Transport</span> ts <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">getTransport</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//3.使用邮箱的用户名和授权码连上邮件服务器</span>    ts<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token string">"smtp.qq.com"</span><span class="token punctuation">,</span><span class="token string">"516303117@qq.com"</span><span class="token punctuation">,</span><span class="token string">"auldwkjfmjwpbicd"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//4.创建邮件：写邮件</span>    <span class="token comment">//注意需要传递Session</span>    <span class="token class-name">MimeMessage</span> message <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MimeMessage</span><span class="token punctuation">(</span>session<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//指明邮件的发件人</span>    message<span class="token punctuation">.</span><span class="token function">setFrom</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">InternetAddress</span><span class="token punctuation">(</span><span class="token string">"516303117@qq.com"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//指明邮件的收件人,自己给自己发</span>    message<span class="token punctuation">.</span><span class="token function">setRecipient</span><span class="token punctuation">(</span><span class="token class-name">Message<span class="token punctuation">.</span>RecipientType</span><span class="token punctuation">.</span>TO<span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">InternetAddress</span><span class="token punctuation">(</span><span class="token string">"857649279@qq.com"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    message<span class="token punctuation">.</span><span class="token function">setSubject</span><span class="token punctuation">(</span><span class="token string">"Java邮件发送测试"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//邮件的标题</span>    <span class="token comment">//=======================================</span>    <span class="token comment">//简单邮件和复杂邮件的区分</span>    <span class="token comment">//准备图片数据</span>    <span class="token class-name">MimeBodyPart</span> image <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MimeBodyPart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">DataHandler</span> dh <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataHandler</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FileDataSource</span><span class="token punctuation">(</span><span class="token string">"C:\\ideaproject\\SendEmail\\src\\006.jpg"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    image<span class="token punctuation">.</span><span class="token function">setDataHandler</span><span class="token punctuation">(</span>dh<span class="token punctuation">)</span><span class="token punctuation">;</span>    image<span class="token punctuation">.</span><span class="token function">setContentID</span><span class="token punctuation">(</span><span class="token string">"MyWife.jpg"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//准备正文数据</span>    <span class="token class-name">MimeBodyPart</span> text <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MimeBodyPart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    text<span class="token punctuation">.</span><span class="token function">setContent</span><span class="token punctuation">(</span><span class="token string">"您好！这是您的老婆请签收！！！&lt;img src='cid:MyWife.jpg'&gt;"</span><span class="token punctuation">,</span><span class="token string">"text/html;charset=UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//描述数据关系</span>    <span class="token class-name">MimeMultipart</span> mm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MimeMultipart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    mm<span class="token punctuation">.</span><span class="token function">addBodyPart</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>    mm<span class="token punctuation">.</span><span class="token function">addBodyPart</span><span class="token punctuation">(</span>image<span class="token punctuation">)</span><span class="token punctuation">;</span>    mm<span class="token punctuation">.</span><span class="token function">setSubType</span><span class="token punctuation">(</span><span class="token string">"related"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//设置到消息中，保存修改</span>    message<span class="token punctuation">.</span><span class="token function">setContent</span><span class="token punctuation">(</span>mm<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//把最后编辑好的邮件放到消息当中</span>    message<span class="token punctuation">.</span><span class="token function">saveChanges</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//保存修改</span>    <span class="token comment">//5.发送邮件</span>    ts<span class="token punctuation">.</span><span class="token function">sendMessage</span><span class="token punctuation">(</span>message<span class="token punctuation">,</span>message<span class="token punctuation">.</span><span class="token function">getAllRecipients</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//6.关闭连接</span>    ts<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h4 id="3-3发送带附件的复杂邮件"><a href="#3-3发送带附件的复杂邮件" class="headerlink" title="3.3发送带附件的复杂邮件"></a>3.3发送带附件的复杂邮件</h4><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>    <span class="token class-name">Properties</span> prop <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Properties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    prop<span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span><span class="token string">"mail.host"</span><span class="token punctuation">,</span><span class="token string">"smtp.qq.com"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    prop<span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span><span class="token string">"mail.transport.protocol"</span><span class="token punctuation">,</span><span class="token string">"smtp"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    prop<span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span><span class="token string">"mail.smtp.auth"</span><span class="token punctuation">,</span><span class="token string">"true"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//QQ邮箱，还要设置SSL加密，加入以下代码即可，其他邮箱不需要</span>    <span class="token class-name">MailSSLSocketFactory</span> sf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MailSSLSocketFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    sf<span class="token punctuation">.</span><span class="token function">setTrustAllHosts</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    prop<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"mail.smtp.ssl.enable"</span><span class="token punctuation">,</span><span class="token string">"true"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    prop<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"mail.smtp.ssl.socketFactory"</span><span class="token punctuation">,</span>sf<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//使用JavaMail发送邮件的四个步骤</span>    <span class="token comment">//1.创建定义整个应用程序所需的环境信息的Session对象(这个Session和JavaWeb里的session不一样)</span>    <span class="token comment">//QQ才有！！！其他邮箱不用</span>    <span class="token class-name">Session</span> session <span class="token operator">=</span> <span class="token class-name">Session</span><span class="token punctuation">.</span><span class="token function">getDefaultInstance</span><span class="token punctuation">(</span>prop<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Authenticator</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">public</span> <span class="token class-name">PasswordAuthentication</span> <span class="token function">getPasswordAuthentication</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">PasswordAuthentication</span><span class="token punctuation">(</span><span class="token string">"516303117@qq.com"</span><span class="token punctuation">,</span><span class="token string">"auldwkjfmjwpbicd"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//开启session的debug模式，这样就可以查看到程序发送Email的运行状态</span>    session<span class="token punctuation">.</span><span class="token function">setDebug</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//2.通过session得到transport对象</span>    <span class="token class-name">Transport</span> ts <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">getTransport</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//3.使用邮箱的用户名和授权码连上邮件服务器</span>    ts<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token string">"smtp.qq.com"</span><span class="token punctuation">,</span><span class="token string">"516303117@qq.com"</span><span class="token punctuation">,</span><span class="token string">"auldwkjfmjwpbicd"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//4.创建邮件：写邮件</span>    <span class="token comment">//注意需要传递Session</span>    <span class="token class-name">MimeMessage</span> message <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MimeMessage</span><span class="token punctuation">(</span>session<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//指明邮件的发件人</span>    message<span class="token punctuation">.</span><span class="token function">setFrom</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">InternetAddress</span><span class="token punctuation">(</span><span class="token string">"516303117@qq.com"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//指明邮件的收件人,自己给自己发</span>    message<span class="token punctuation">.</span><span class="token function">setRecipient</span><span class="token punctuation">(</span><span class="token class-name">Message<span class="token punctuation">.</span>RecipientType</span><span class="token punctuation">.</span>TO<span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">InternetAddress</span><span class="token punctuation">(</span><span class="token string">"857649279@qq.com"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    message<span class="token punctuation">.</span><span class="token function">setSubject</span><span class="token punctuation">(</span><span class="token string">"Java邮件发送测试"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//邮件的标题</span>    <span class="token comment">//=======================================</span>    <span class="token comment">//简单邮件和复杂邮件的区分</span>    <span class="token comment">//准备图片数据</span>    <span class="token class-name">MimeBodyPart</span> image <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MimeBodyPart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">DataHandler</span> dh <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataHandler</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FileDataSource</span><span class="token punctuation">(</span><span class="token string">"C:\\ideaproject\\SendEmail\\src\\006.jpg"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    image<span class="token punctuation">.</span><span class="token function">setDataHandler</span><span class="token punctuation">(</span>dh<span class="token punctuation">)</span><span class="token punctuation">;</span>    image<span class="token punctuation">.</span><span class="token function">setContentID</span><span class="token punctuation">(</span><span class="token string">"MyWife.jpg"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//准备正文数据</span>    <span class="token class-name">MimeBodyPart</span> text <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MimeBodyPart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    text<span class="token punctuation">.</span><span class="token function">setContent</span><span class="token punctuation">(</span><span class="token string">"您好！这是您的老婆请签收！！！&lt;img src='cid:MyWife.jpg'&gt;"</span><span class="token punctuation">,</span><span class="token string">"text/html;charset=UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//=================================准备附件数据</span>    <span class="token class-name">MimeBodyPart</span> body1<span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MimeBodyPart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    body1<span class="token punctuation">.</span><span class="token function">setDataHandler</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">DataHandler</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FileDataSource</span><span class="token punctuation">(</span><span class="token string">"C:\\ideaproject\\SendEmail\\src\\文献综述.docx"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    body1<span class="token punctuation">.</span><span class="token function">setFileName</span><span class="token punctuation">(</span><span class="token class-name">MimeUtility</span><span class="token punctuation">.</span><span class="token function">encodeText</span><span class="token punctuation">(</span><span class="token string">"文献综述.docx"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//MimeUtility类的encodeText方法解决中文乱码    </span>    <span class="token comment">//描述数据关系</span>    <span class="token class-name">MimeMultipart</span> mm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MimeMultipart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    mm<span class="token punctuation">.</span><span class="token function">addBodyPart</span><span class="token punctuation">(</span>body1<span class="token punctuation">)</span><span class="token punctuation">;</span>    mm<span class="token punctuation">.</span><span class="token function">addBodyPart</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>    mm<span class="token punctuation">.</span><span class="token function">addBodyPart</span><span class="token punctuation">(</span>image<span class="token punctuation">)</span><span class="token punctuation">;</span>    mm<span class="token punctuation">.</span><span class="token function">setSubType</span><span class="token punctuation">(</span><span class="token string">"mixed"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//设置到消息中，保存修改</span>    message<span class="token punctuation">.</span><span class="token function">setContent</span><span class="token punctuation">(</span>mm<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//把最后编辑好的邮件放到消息当中</span>    message<span class="token punctuation">.</span><span class="token function">saveChanges</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//保存修改</span>    <span class="token comment">//5.发送邮件</span>    ts<span class="token punctuation">.</span><span class="token function">sendMessage</span><span class="token punctuation">(</span>message<span class="token punctuation">,</span>message<span class="token punctuation">.</span><span class="token function">getAllRecipients</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//6.关闭连接</span>    ts<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>具体可以参考这篇博客！！！：[<a href="https://blog.csdn.net/weixin_45148997/article/details/107194777?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522164731583416780271983352%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&amp;request_id=164731583416780271983352&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~rank_v31_ecpm-1-107194777.142%5D">https://blog.csdn.net/weixin_45148997/article/details/107194777?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522164731583416780271983352%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&amp;request_id=164731583416780271983352&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~rank_v31_ecpm-1-107194777.142]</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> JavaWeb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文件上传</title>
      <link href="/2022/03/14/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
      <url>/2022/03/14/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="文件上传实现"><a href="#文件上传实现" class="headerlink" title="文件上传实现"></a>文件上传实现</h2><p>文件上传可以分为三个步骤</p><h3 id="1-创建DiskFileItemFactory对象，处理文件上传路径或者大小限制的"><a href="#1-创建DiskFileItemFactory对象，处理文件上传路径或者大小限制的" class="headerlink" title="1.创建DiskFileItemFactory对象，处理文件上传路径或者大小限制的"></a>1.创建DiskFileItemFactory对象，处理文件上传路径或者大小限制的</h3><pre class="language-java" data-language="java"><code class="language-java"><span class="token class-name">DiskFileItemFactory</span> factory <span class="token operator">=</span> <span class="token function">getDiskFileItemFactory</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="2-获取ServletFileUpload"><a href="#2-获取ServletFileUpload" class="headerlink" title="2.获取ServletFileUpload"></a>2.获取ServletFileUpload</h3><pre class="language-java" data-language="java"><code class="language-java"><span class="token class-name">ServletFileUpload</span> upload <span class="token operator">=</span> <span class="token function">getServletFileUpload</span><span class="token punctuation">(</span>factory<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="3-处理上传的文件"><a href="#3-处理上传的文件" class="headerlink" title="3.处理上传的文件"></a>3.处理上传的文件</h3><pre class="language-java" data-language="java"><code class="language-java"><span class="token class-name">String</span> msg <span class="token operator">=</span> <span class="token function">uploadParseRequest</span><span class="token punctuation">(</span>upload<span class="token punctuation">,</span>req<span class="token punctuation">,</span>uploadPath<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>但在进行这三个步骤之前：需要进行一些操作！！！</p><h3 id="4-使用前的一些操作"><a href="#4-使用前的一些操作" class="headerlink" title="4.使用前的一些操作"></a>4.使用前的一些操作</h3><p>1.判断上传的文件是普通表单还是带文件的表单</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">ServletFileUpload</span><span class="token punctuation">.</span><span class="token function">isMultipartContent</span><span class="token punctuation">(</span>req<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span><span class="token punctuation">;</span><span class="token comment">//终止方法运行，说明这是一个普通的表单，直接返回</span><span class="token punctuation">}</span></code></pre><p>2.创建上传文件的保存路径，建议在WEB-INF路径下，安全，用户无法直接访问上传的文件</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token class-name">String</span> uploadPath <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getServletContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRealPath</span><span class="token punctuation">(</span><span class="token string">"/WEB-INF/upload"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">File</span> uploadfile <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>uploadPath<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>uploadfile<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    uploadfile<span class="token punctuation">.</span><span class="token function">mkdir</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//创建这个目录</span><span class="token punctuation">}</span></code></pre><p>3.临时路径，假如文件超过了预期的大小，我们就把他放在一个临时文件中，过几天自动删除，或者提醒用户转存为永久</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token class-name">String</span> tmpPath <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getServletContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRealPath</span><span class="token punctuation">(</span><span class="token string">"/WEB-INF/tmp"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">File</span> file <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>tmpPath<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>file<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    file<span class="token punctuation">.</span><span class="token function">mkdir</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//创建这个临时目录</span><span class="token punctuation">}</span></code></pre><h3 id="5-把1、2、3步骤所要用到的东西封装成3个方法"><a href="#5-把1、2、3步骤所要用到的东西封装成3个方法" class="headerlink" title="5.把1、2、3步骤所要用到的东西封装成3个方法"></a>5.把1、2、3步骤所要用到的东西封装成3个方法</h3><h4 id="5-1getDiskFileItemFactory方法"><a href="#5-1getDiskFileItemFactory方法" class="headerlink" title="5.1getDiskFileItemFactory方法"></a>5.1getDiskFileItemFactory方法</h4><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">DiskFileItemFactory</span> <span class="token function">getDiskFileItemFactory</span><span class="token punctuation">(</span><span class="token class-name">File</span> file<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token class-name">DiskFileItemFactory</span> factory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DiskFileItemFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        factory<span class="token punctuation">.</span><span class="token function">setSizeThreshold</span><span class="token punctuation">(</span><span class="token number">1024</span><span class="token operator">*</span><span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         factory<span class="token punctuation">.</span><span class="token function">setRepository</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> factory<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h4 id="5-2getServletFileUpload方法"><a href="#5-2getServletFileUpload方法" class="headerlink" title="5.2getServletFileUpload方法"></a>5.2getServletFileUpload方法</h4><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">ServletFileUpload</span> <span class="token function">getServletFileUpload</span><span class="token punctuation">(</span><span class="token class-name">DiskFileItemFactory</span> factory<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token class-name">ServletFileUpload</span> upload <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ServletFileUpload</span><span class="token punctuation">(</span>factory<span class="token punctuation">)</span><span class="token punctuation">;</span>    upload<span class="token punctuation">.</span><span class="token function">setProgressListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ProgressListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">update</span><span class="token punctuation">(</span><span class="token keyword">long</span> pBytesRead<span class="token punctuation">,</span> <span class="token keyword">long</span> pContentLength<span class="token punctuation">,</span> <span class="token keyword">int</span> pItems<span class="token punctuation">)</span><span class="token punctuation">{</span>             <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"总大小:"</span><span class="token operator">+</span>pContentLength<span class="token operator">+</span><span class="token string">"已上传:"</span><span class="token operator">+</span>pBytesRead<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       upload<span class="token punctuation">.</span><span class="token function">setHeaderEncoding</span><span class="token punctuation">(</span><span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   upload<span class="token punctuation">.</span><span class="token function">setFileSizeMax</span><span class="token punctuation">(</span><span class="token number">1024</span><span class="token operator">*</span><span class="token number">1024</span><span class="token operator">*</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    upload<span class="token punctuation">.</span><span class="token function">setSizeMax</span><span class="token punctuation">(</span><span class="token number">1024</span><span class="token operator">*</span><span class="token number">1024</span><span class="token operator">*</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> upload<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h4 id="5-3uploadParseRequest方法"><a href="#5-3uploadParseRequest方法" class="headerlink" title="5.3uploadParseRequest方法"></a>5.3uploadParseRequest方法</h4><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">uploadParseRequest</span><span class="token punctuation">(</span><span class="token class-name">ServletFileUpload</span> upload<span class="token punctuation">,</span> <span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">String</span> uploadPath<span class="token punctuation">)</span><span class="token keyword">throws</span> <span class="token class-name">FileUploadException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>    <span class="token class-name">String</span> msg <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">FileItem</span><span class="token punctuation">&gt;</span></span> fileItems <span class="token operator">=</span> upload<span class="token punctuation">.</span><span class="token function">parseRequest</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">FileItem</span> fileItem <span class="token operator">:</span> fileItems<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>fileItem<span class="token punctuation">.</span><span class="token function">isFormField</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token class-name">String</span> name <span class="token operator">=</span> fileItem<span class="token punctuation">.</span><span class="token function">getFieldName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">String</span> value <span class="token operator">=</span> fileItem<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>name <span class="token operator">+</span> <span class="token string">": "</span> <span class="token operator">+</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                <span class="token class-name">String</span> uploadFileName <span class="token operator">=</span> fileItem<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 <span class="token class-name">String</span> uploadFileName <span class="token operator">=</span> fileItem<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"上传的文件名: "</span> <span class="token operator">+</span> uploadFileName<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>uploadFileName<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span> <span class="token operator">||</span> uploadFileName <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">continue</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token class-name">String</span> fileName <span class="token operator">=</span> uploadFileName<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>uploadFileName<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">String</span> fileExtName <span class="token operator">=</span> uploadFileName<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>uploadFileName<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">"."</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"文件信息[件名: "</span> <span class="token operator">+</span> fileName <span class="token operator">+</span> <span class="token string">" ---文件类型"</span> <span class="token operator">+</span> fileExtName <span class="token operator">+</span> <span class="token string">"]"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">String</span> uuidPath <span class="token operator">=</span> UUID<span class="token punctuation">.</span><span class="token function">randomUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">String</span> realPath <span class="token operator">=</span> uploadPath <span class="token operator">+</span> <span class="token string">"/"</span> <span class="token operator">+</span> uuidPath<span class="token punctuation">;</span>                <span class="token class-name">File</span> realPathFile <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>realPath<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>realPathFile<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    realPathFile<span class="token punctuation">.</span><span class="token function">mkdir</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token class-name">InputStream</span> inputStream <span class="token operator">=</span> fileItem<span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">FileOutputStream</span> fos <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span>realPath <span class="token operator">+</span> <span class="token string">"/"</span> <span class="token operator">+</span> fileName<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> buffer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">1024</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token keyword">int</span> len <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>                <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>len <span class="token operator">=</span> inputStream<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>buffer<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    fos<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>buffer<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> len<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                fos<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                inputStream<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                msg <span class="token operator">=</span> <span class="token string">"文件上传成功!"</span><span class="token punctuation">;</span>                fileItem<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> msg<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>详细说明可以参考这篇博客：<a href="https://blog.csdn.net/bell_love/article/details/106226601?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522164725991716781683919492%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&amp;request_id=164725991716781683919492&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~rank_v31_ecpm-1-106226601.142">https://blog.csdn.net/bell_love/article/details/106226601?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522164725991716781683919492%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&amp;request_id=164725991716781683919492&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~rank_v31_ecpm-1-106226601.142</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> JavaWeb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java日常遇到的问题</title>
      <link href="/2022/03/09/Java%E6%97%A5%E5%B8%B8%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/"/>
      <url>/2022/03/09/Java%E6%97%A5%E5%B8%B8%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h2 id="java中-next-方法的作用及应用？"><a href="#java中-next-方法的作用及应用？" class="headerlink" title="java中.next()方法的作用及应用？"></a>java中.next()方法的作用及应用？</h2><h3 id="1-next-方法的作用"><a href="#1-next-方法的作用" class="headerlink" title="1.(.next())方法的作用"></a>1.(.next())方法的作用</h3><p>指针指向下一条记录，有记录（有值）返回true并把记录内容存入到对应的对象中，也就是obj.next()的obj中。如果没有返回false。</p><h3 id="2-next-方法的应用"><a href="#2-next-方法的应用" class="headerlink" title="2.(.next())方法的应用"></a>2.(.next())方法的应用</h3><p>一般和ResultSet对象和while循环一起使用，去迭代结果集。</p><h2 id="ResultSet的getInt-和getString-方法详解"><a href="#ResultSet的getInt-和getString-方法详解" class="headerlink" title="ResultSet的getInt()和getString()方法详解"></a>ResultSet的getInt()和getString()方法详解</h2><p>就比如说在MySQL执行查询语句如下：</p><pre class="language-mysql" data-language="mysql"><code class="language-mysql">ResultSet rs = null;String sql="SELECT flow_id,Type,id_card,exam_card,student_name,location,grade FROM examstudent";rs = st.executeQuery(sql);</code></pre><pre class="language-mysql" data-language="mysql"><code class="language-mysql">rs:数据集。rs.getInt(int index);rs.getInt(String columName);你可以通过索引或者列名来获得查询结果集中的某一列的值。例如：while(rs.next){  rs.getInt(1)//等价于rs.getInt("flowid");  rs.getString(5)//等价于rs.getInt("student_name");}注意：getInt()和getString()方法的索引值从1开始，表示第一个字段。</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> 小tips </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小技巧</title>
      <link href="/2022/03/08/%E5%B0%8F%E6%8A%80%E5%B7%A7/"/>
      <url>/2022/03/08/%E5%B0%8F%E6%8A%80%E5%B7%A7/</url>
      
        <content type="html"><![CDATA[<p>Java方法：（有返回值与没有返回值）的作用有什么区别</p><p>一个方法有没有返回值是看你自己的设计需要。比如一个1+1的方法，如果别的地方调用，需要结果，那么就用返回值的方式返回给调用者，如果你是想直接打印到控制台的话，就不用返回了 </p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token number">1</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>add<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token comment">//这里就需要返回值</span><span class="token comment">//----------------------------</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">//这里就不需要返回值</span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> 小tips </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JDBC数据库操作</title>
      <link href="/2022/03/07/JDBC%E6%95%B0%E6%8D%AE%E5%BA%93%E6%93%8D%E4%BD%9C/"/>
      <url>/2022/03/07/JDBC%E6%95%B0%E6%8D%AE%E5%BA%93%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h2 id="JDBC数据库操作"><a href="#JDBC数据库操作" class="headerlink" title="JDBC数据库操作"></a>JDBC数据库操作</h2><h3 id="1、什么是JDBC"><a href="#1、什么是JDBC" class="headerlink" title="1、什么是JDBC"></a>1、什么是JDBC</h3><p> JDBC：Java连接数据库。</p><p>JDBC技术主要是为了完成以下几个任务：</p><p>1.与数据库建立一个连接；</p><p>2.向数据库发送SQL语句；</p><p>3.处理从数据库返回的结果。</p><h3 id="2-JDBC常用类和接口"><a href="#2-JDBC常用类和接口" class="headerlink" title="2.JDBC常用类和接口"></a>2.JDBC常用类和接口</h3><h4 id="2-1DriverManager类"><a href="#2-1DriverManager类" class="headerlink" title="2.1DriverManager类"></a>2.1DriverManager类</h4><p>DriverManager类是JDBC的管理层，用于管理数据库中的驱动程序。在操作指定数据库之前，需要使用Java中的Class类的静态方法forName(String className)加载指定数据库的驱动程序。</p><h4 id="2-2Connection接口"><a href="#2-2Connection接口" class="headerlink" title="2.2Connection接口"></a>2.2Connection接口</h4><p>Connection接口代表与特定的数据库连接，在连接上下文中执行SQL语句并返回结果。</p><h4 id="2-3Statement接口"><a href="#2-3Statement接口" class="headerlink" title="2.3Statement接口"></a>2.3Statement接口</h4><p>Statement接口用于在已经建立连接的基础上向数据库发送SQL语句。</p><h4 id="2-4PreparedStatement接口"><a href="#2-4PreparedStatement接口" class="headerlink" title="2.4PreparedStatement接口"></a>2.4PreparedStatement接口</h4><p>PreparedStatement接口用来动态的执行SQL语句。</p><h4 id="2-5ResultSet接口"><a href="#2-5ResultSet接口" class="headerlink" title="2.5ResultSet接口"></a>2.5ResultSet接口</h4><p>ResultSet接口类似于一个临时表，用来暂时存放数据库查询操作所获得的结果集。</p><h3 id="3-数据库操作（基于Mysql）"><a href="#3-数据库操作（基于Mysql）" class="headerlink" title="3.数据库操作（基于Mysql）"></a>3.数据库操作（基于Mysql）</h3><pre class="language-java" data-language="java"><code class="language-java"><span class="token class-name">PreparedStatement</span> ps <span class="token operator">=</span> con<span class="token punctuation">.</span><span class="token function">prepareStatement</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span>ps<span class="token punctuation">.</span><span class="token function">setInt</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>第一句是预处理语句</p><p>第二句代表的意思是从左向右的第一个通配符，3表示通配符设置的值</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token class-name">String</span> sql <span class="token operator">=</span> <span class="token string">"insert into tb_stu values(?,?,?,?)"</span><span class="token punctuation">;</span>pre<span class="token punctuation">.</span><span class="token function">setInt</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>pre<span class="token punctuation">.</span><span class="token function">setString</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>pre<span class="token punctuation">.</span><span class="token function">setString</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span>sex<span class="token punctuation">)</span><span class="token punctuation">;</span>pre<span class="token punctuation">.</span><span class="token function">setString</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span>birthday<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>设置第一个通配符为id，</p><p>第二个通配符为name，</p><p>第三个通配符为sex，</p><p>第四个通配符为birthday</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span></span><span class="token class-name">Test</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> JDBC <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">String</span> driver <span class="token operator">=</span> <span class="token string">"com.mysql.jdbc.Driver"</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">String</span> url <span class="token operator">=</span> <span class="token string">"jdbc:mysql://localhost:3306/smbms?useSSL=false&amp;useUnicode=true&amp;characterEncoding=UTF-8"</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">String</span> username <span class="token operator">=</span> <span class="token string">"root"</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">String</span> password <span class="token operator">=</span> <span class="token string">"123456"</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Connection</span> con<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">initConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        con <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span>driver<span class="token punctuation">)</span><span class="token punctuation">;</span>            con <span class="token operator">=</span> <span class="token class-name">DriverManager</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span>username<span class="token punctuation">,</span>password<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">closeConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>con<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">try</span> <span class="token punctuation">{</span>                con<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> throwables<span class="token punctuation">)</span> <span class="token punctuation">{</span>                throwables<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">showAllData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token class-name">String</span> sql <span class="token operator">=</span> <span class="token string">"select * from tb_stu"</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            <span class="token class-name">Statement</span> stmt <span class="token operator">=</span> con<span class="token punctuation">.</span><span class="token function">createStatement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">ResultSet</span> res <span class="token operator">=</span> stmt<span class="token punctuation">.</span><span class="token function">executeQuery</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">while</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"编号:"</span><span class="token operator">+</span>res<span class="token punctuation">.</span><span class="token function">getObject</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"姓名为:"</span><span class="token operator">+</span>res<span class="token punctuation">.</span><span class="token function">getObject</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"性别为:"</span><span class="token operator">+</span>res<span class="token punctuation">.</span><span class="token function">getObject</span><span class="token punctuation">(</span><span class="token string">"sex"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"生日为:"</span><span class="token operator">+</span>res<span class="token punctuation">.</span><span class="token function">getObject</span><span class="token punctuation">(</span><span class="token string">"birthday"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> throwables<span class="token punctuation">)</span> <span class="token punctuation">{</span>            throwables<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">int</span> id<span class="token punctuation">,</span><span class="token class-name">String</span> name<span class="token punctuation">,</span><span class="token class-name">String</span> sex<span class="token punctuation">,</span><span class="token class-name">String</span> birthday<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token class-name">String</span> sql <span class="token operator">=</span> <span class="token string">"insert into tb_stu values(?,?,?,?)"</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            <span class="token class-name">PreparedStatement</span> pre <span class="token operator">=</span> con<span class="token punctuation">.</span><span class="token function">prepareStatement</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span>            pre<span class="token punctuation">.</span><span class="token function">setObject</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>            pre<span class="token punctuation">.</span><span class="token function">setObject</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>            pre<span class="token punctuation">.</span><span class="token function">setObject</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span>sex<span class="token punctuation">)</span><span class="token punctuation">;</span>            pre<span class="token punctuation">.</span><span class="token function">setObject</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span>birthday<span class="token punctuation">)</span><span class="token punctuation">;</span>            pre<span class="token punctuation">.</span><span class="token function">executeUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> throwables<span class="token punctuation">)</span> <span class="token punctuation">{</span>            throwables<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">delete</span><span class="token punctuation">(</span><span class="token keyword">int</span> id<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment">//两种删除方法，一个通过通配符删除，一个是直接在sql语句里面加上方法的参数</span>        <span class="token class-name">String</span> sql <span class="token operator">=</span> <span class="token string">"delete from tb_stu where id="</span><span class="token operator">+</span>id<span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            <span class="token class-name">PreparedStatement</span> pre <span class="token operator">=</span> con<span class="token punctuation">.</span><span class="token function">prepareStatement</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span>            pre<span class="token punctuation">.</span><span class="token function">executeUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> throwables<span class="token punctuation">)</span> <span class="token punctuation">{</span>            throwables<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token comment">//        String sql1 = "delete * from where id = ?";</span><span class="token comment">//        try {</span><span class="token comment">//            PreparedStatement pre = con.prepareStatement(sql);</span><span class="token comment">//            pre.setObject(1,id);</span><span class="token comment">//            pre.executeUpdate();</span><span class="token comment">//        } catch (SQLException throwables) {</span><span class="token comment">//            throwables.printStackTrace();</span><span class="token comment">//        }</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">update</span><span class="token punctuation">(</span><span class="token keyword">int</span> id<span class="token punctuation">,</span><span class="token class-name">String</span> newName<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token class-name">String</span> sql <span class="token operator">=</span> <span class="token string">"update tb_stu set name = ? where id = ?"</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            <span class="token class-name">PreparedStatement</span> pre <span class="token operator">=</span> con<span class="token punctuation">.</span><span class="token function">prepareStatement</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span>            pre<span class="token punctuation">.</span><span class="token function">setObject</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>newName<span class="token punctuation">)</span><span class="token punctuation">;</span>            pre<span class="token punctuation">.</span><span class="token function">setObject</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>            pre<span class="token punctuation">.</span><span class="token function">executeUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> throwables<span class="token punctuation">)</span> <span class="token punctuation">{</span>            throwables<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token comment">//        String sql1 = "update tb_stu set name="+newName+"and id="+id;</span><span class="token comment">//        try {</span><span class="token comment">//            PreparedStatement pre1 = con.prepareStatement(sql1);</span><span class="token comment">//            pre1.executeUpdate();</span><span class="token comment">//        } catch (SQLException throwables) {</span><span class="token comment">//            throwables.printStackTrace();</span><span class="token comment">//        }</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token class-name">JDBC</span> j1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token function">JDBC</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        j1<span class="token punctuation">.</span><span class="token function">initConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"查"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        j1<span class="token punctuation">.</span><span class="token function">showAllData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"增"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        j1<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token string">"戴宇"</span><span class="token punctuation">,</span><span class="token string">"男"</span><span class="token punctuation">,</span><span class="token string">"2022-03-07"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        j1<span class="token punctuation">.</span><span class="token function">showAllData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"删"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        j1<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        j1<span class="token punctuation">.</span><span class="token function">showAllData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"改"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        j1<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token string">"吴彦祖"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        j1<span class="token punctuation">.</span><span class="token function">showAllData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        j1<span class="token punctuation">.</span><span class="token function">closeConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> JavaSE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>navicat注意事项</title>
      <link href="/2022/03/04/Navicat%E5%88%9B%E5%BB%BA%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/"/>
      <url>/2022/03/04/Navicat%E5%88%9B%E5%BB%BA%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/</url>
      
        <content type="html"><![CDATA[<h2 id="Navicat创建数据库的注意事项"><a href="#Navicat创建数据库的注意事项" class="headerlink" title="Navicat创建数据库的注意事项"></a>Navicat创建数据库的注意事项</h2><h3 id="1、使用navicat连接MySQL数据库创建数据库的字符集和排序规则配置"><a href="#1、使用navicat连接MySQL数据库创建数据库的字符集和排序规则配置" class="headerlink" title="1、使用navicat连接MySQL数据库创建数据库的字符集和排序规则配置"></a>1、使用navicat连接MySQL数据库创建数据库的字符集和排序规则配置</h3><p><img src="https://s2.loli.net/2022/03/04/2dESiyJG8OCmQf7.jpg"></p><p>注意:</p><h4 id="（1）字符集一般选择UTF-8或者GBK"><a href="#（1）字符集一般选择UTF-8或者GBK" class="headerlink" title="（1）字符集一般选择UTF-8或者GBK"></a>（1）字符集一般选择UTF-8或者GBK</h4><h4 id="（2）排序规则的选择需要注意的是，utf8-general-ci、utf8-general-cs、utf8-bin的区别，ci全称为case-insensitive-意思是大小写不敏感，cs区分大小写，bin是以二进制数据存储，且区分大小写。如果要求数据库不区分大小写，则需要选择ci结尾的。"><a href="#（2）排序规则的选择需要注意的是，utf8-general-ci、utf8-general-cs、utf8-bin的区别，ci全称为case-insensitive-意思是大小写不敏感，cs区分大小写，bin是以二进制数据存储，且区分大小写。如果要求数据库不区分大小写，则需要选择ci结尾的。" class="headerlink" title="（2）排序规则的选择需要注意的是，utf8_general_ci、utf8_general_cs、utf8_bin的区别，ci全称为case insensitive,意思是大小写不敏感，cs区分大小写，bin是以二进制数据存储，且区分大小写。如果要求数据库不区分大小写，则需要选择ci结尾的。"></a>（2）排序规则的选择需要注意的是，utf8_general_ci、utf8_general_cs、utf8_bin的区别，ci全称为case insensitive,意思是大小写不敏感，cs区分大小写，bin是以二进制数据存储，且区分大小写。如果要求数据库不区分大小写，则需要选择ci结尾的。</h4><h3 id="2-用Navicat-for-mysql创建表-在设置外键的时候，删除时和更新时两列有四个值可以选择：CASCADE、NO-ACTION、RESTRICT、SET-NULL"><a href="#2-用Navicat-for-mysql创建表-在设置外键的时候，删除时和更新时两列有四个值可以选择：CASCADE、NO-ACTION、RESTRICT、SET-NULL" class="headerlink" title="2. 用Navicat for mysql创建表,在设置外键的时候，删除时和更新时两列有四个值可以选择：CASCADE、NO ACTION、RESTRICT、SET NULL"></a>2. <strong>用Navicat for mysql创建表,在设置外键的时候，删除时和更新时两列有四个值可以选择：CASCADE、NO ACTION、RESTRICT、SET NULL</strong></h3><h4 id="其区别如下："><a href="#其区别如下：" class="headerlink" title="其区别如下："></a>其区别如下：</h4><h4 id="CASCADE：父表delete、update的时候，子表会delete、update掉关联记录；"><a href="#CASCADE：父表delete、update的时候，子表会delete、update掉关联记录；" class="headerlink" title="CASCADE：父表delete、update的时候，子表会delete、update掉关联记录；"></a>CASCADE：父表delete、update的时候，子表会delete、update掉关联记录；</h4><h4 id="SET-NULL：父表delete、update的时候，子表会将关联记录的外键字段所在列设为null，所以注意在设计子表时外键不能设为not-null；"><a href="#SET-NULL：父表delete、update的时候，子表会将关联记录的外键字段所在列设为null，所以注意在设计子表时外键不能设为not-null；" class="headerlink" title="SET NULL：父表delete、update的时候，子表会将关联记录的外键字段所在列设为null，所以注意在设计子表时外键不能设为not null；"></a>SET NULL：父表delete、update的时候，子表会将关联记录的外键字段所在列设为null，所以注意在设计子表时外键不能设为not null；</h4><h4 id="RESTRICT：如果想要删除父表的记录时，而在子表中有关联该父表的记录，则不允许删除父表中的记录；"><a href="#RESTRICT：如果想要删除父表的记录时，而在子表中有关联该父表的记录，则不允许删除父表中的记录；" class="headerlink" title="RESTRICT：如果想要删除父表的记录时，而在子表中有关联该父表的记录，则不允许删除父表中的记录；"></a>RESTRICT：如果想要删除父表的记录时，而在子表中有关联该父表的记录，则不允许删除父表中的记录；</h4><h4 id="NO-ACTION：同-RESTRICT，也是首先先检查外键；"><a href="#NO-ACTION：同-RESTRICT，也是首先先检查外键；" class="headerlink" title="NO ACTION：同 RESTRICT，也是首先先检查外键；"></a>NO ACTION：同 RESTRICT，也是首先先检查外键；</h4><h4 id="注意："><a href="#注意：" class="headerlink" title="注意："></a>注意：</h4><h4 id="1-gt-添加外键数据库引擎必须为InnoDB；"><a href="#1-gt-添加外键数据库引擎必须为InnoDB；" class="headerlink" title="1>添加外键数据库引擎必须为InnoDB；"></a>1&gt;添加外键数据库引擎必须为InnoDB；</h4><h4 id="2-gt-关联的字段数据类型必须一样；"><a href="#2-gt-关联的字段数据类型必须一样；" class="headerlink" title="2>关联的字段数据类型必须一样；"></a>2&gt;关联的字段数据类型必须一样；</h4><h4 id="3-gt-从表中的关联字段数据，必须在主表中。"><a href="#3-gt-从表中的关联字段数据，必须在主表中。" class="headerlink" title="3>从表中的关联字段数据，必须在主表中。"></a>3&gt;从表中的关联字段数据，必须在主表中。</h4><p><img src="https://s2.loli.net/2022/03/04/3ksTK5SrEHtXPyl.jpg"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 小tip </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java基础第三部分</title>
      <link href="/2022/02/20/Java%E5%9F%BA%E7%A1%80%E7%AC%AC%E4%B8%89%E9%83%A8%E5%88%86/"/>
      <url>/2022/02/20/Java%E5%9F%BA%E7%A1%80%E7%AC%AC%E4%B8%89%E9%83%A8%E5%88%86/</url>
      
        <content type="html"><![CDATA[<h2 id="Java学习之路"><a href="#Java学习之路" class="headerlink" title="Java学习之路"></a>Java学习之路</h2><h3 id="1-数组"><a href="#1-数组" class="headerlink" title="1.数组"></a>1.数组</h3><h4 id="1-1一维数组和二维数组"><a href="#1-1一维数组和二维数组" class="headerlink" title="1.1一维数组和二维数组"></a>1.1一维数组和二维数组</h4><p>一维数组和二维数组都包含了创建、初始化、使用这三个过程，创建和初始化这两个过程就不介绍，如果要了解的话，可以参考以下工具书。</p><p>首先是一维数组的使用：现在假如有这样一道题，在主方法中创建并初始化一个用于存储1<del>12月每个月份天数的int型数组，在控制台上输出1</del>12月每个月份的天数。实例代码如下：</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GetDay</span><span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">int</span> day<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token number">31</span><span class="token punctuation">,</span><span class="token number">28</span><span class="token punctuation">,</span><span class="token number">31</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">31</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">31</span><span class="token punctuation">,</span><span class="token number">31</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">31</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">31</span><span class="token punctuation">}</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>day<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"月有"</span><span class="token operator">+</span>day<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">"天"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>接着就是二维数组的使用：现在假如有这样一道题，输出一个3行4列且所有元素都为0的矩阵。实例代码如下:</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Matrix</span><span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">int</span> a<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>a<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>在学习过程中碰到一道有意思的题目，顺便放在博客上：声明一个字符型二维数组，将古诗《春晓》的内容赋值于二维数组，然后分别用横板和竖版两种方式输出。实际代码如下：</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RuntimeExecDemo</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">char</span> a<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token char">'春'</span><span class="token punctuation">,</span><span class="token char">'眠'</span><span class="token punctuation">,</span><span class="token char">'不'</span><span class="token punctuation">,</span><span class="token char">'觉'</span><span class="token punctuation">,</span><span class="token char">'晓'</span><span class="token punctuation">}</span><span class="token punctuation">;</span>        a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token char">'处'</span><span class="token punctuation">,</span><span class="token char">'处'</span><span class="token punctuation">,</span><span class="token char">'闻'</span><span class="token punctuation">,</span><span class="token char">'啼'</span><span class="token punctuation">,</span><span class="token char">'鸟'</span><span class="token punctuation">}</span><span class="token punctuation">;</span>        a<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token char">'夜'</span><span class="token punctuation">,</span><span class="token char">'来'</span><span class="token punctuation">,</span><span class="token char">'风'</span><span class="token punctuation">,</span><span class="token char">'雨'</span><span class="token punctuation">,</span><span class="token char">'声'</span><span class="token punctuation">}</span><span class="token punctuation">;</span>        a<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token char">'花'</span><span class="token punctuation">,</span><span class="token char">'落'</span><span class="token punctuation">,</span><span class="token char">'知'</span><span class="token punctuation">,</span><span class="token char">'多'</span><span class="token punctuation">,</span><span class="token char">'少'</span><span class="token punctuation">}</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">4</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span><span class="token number">5</span><span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">5</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span><span class="token number">4</span><span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>横板遍历很简单，在我看来就是最外层循环i为0时，进入下一层循环，下一层循环5次，再跳到最外层循环，不断这样下来就实现了横板遍历。竖版遍历也差不多。</p><h4 id="1-2数组的基本操作"><a href="#1-2数组的基本操作" class="headerlink" title="1.2数组的基本操作"></a>1.2数组的基本操作</h4><p>java.util包下的Arrays类用来操作数组。</p><h5 id="1-2-1遍历数组"><a href="#1-2-1遍历数组" class="headerlink" title="1.2.1遍历数组"></a>1.2.1遍历数组</h5><p>说到遍历数组，其实最好用的还是foreach，这个我在上一个部分里有提到过。</p><h5 id="1-2-2填充替换数组"><a href="#1-2-2填充替换数组" class="headerlink" title="1.2.2填充替换数组"></a>1.2.2填充替换数组</h5><p>Arrays.fill(数组，值1)填充数组，遍历出来的值都为值1</p><p>Arrays.fill(数组，值1，值2，值3)替换值1和值2范围内的值为值3(其实就是替换值1位置的值)</p><h5 id="1-2-3对数组进行排序"><a href="#1-2-3对数组进行排序" class="headerlink" title="1.2.3对数组进行排序"></a>1.2.3对数组进行排序</h5><p>Arrays.sort(数组)对数组进行升序排序</p><h5 id="1-2-4复制数组"><a href="#1-2-4复制数组" class="headerlink" title="1.2.4复制数组"></a>1.2.4复制数组</h5><p>Arrays.copyOf(数组，值)对数组进行填充，如果新的数组大于旧的数组，整型数组用0填充，char型数组则使用null填充 </p><p>Arrays.copyOfRange(数组，值1，值2)对数组从值1的位置到值2的位置复制数组(新的数组不包括索引是值2的值）</p><h5 id="1-2-5查询数组"><a href="#1-2-5查询数组" class="headerlink" title="1.2.5查询数组"></a>1.2.5查询数组</h5><p>Arrays.binarySearch(数组，值1，值2，值3)在值1和值2的范围内搜索值3的位置(同样也不包含索引为值2的值)</p><h4 id="1-3数组排序算法"><a href="#1-3数组排序算法" class="headerlink" title="1.3数组排序算法"></a>1.3数组排序算法</h4><h5 id="1-3-1冒泡排序"><a href="#1-3-1冒泡排序" class="headerlink" title="1.3.1冒泡排序"></a>1.3.1冒泡排序</h5><p><img src="https://s2.loli.net/2022/02/20/7uepJB31xykl5ZA.png"></p><h5 id="1-3-2直接选择排序"><a href="#1-3-2直接选择排序" class="headerlink" title="1.3.2直接选择排序"></a>1.3.2直接选择排序</h5><p><img src="https://s2.loli.net/2022/02/20/iIyrFPEO6GRBao5.png"></p><h5 id="1-3-3反转排序"><a href="#1-3-3反转排序" class="headerlink" title="1.3.3反转排序"></a>1.3.3反转排序</h5><p><img src="https://s2.loli.net/2022/02/20/YkiN5uRl2Vvr3bJ.png"></p><p>那么数组部分就到此结束!!!</p><p><img src="https://s2.loli.net/2022/02/20/GXM1n8Tcu4eBIqm.png"></p>]]></content>
      
      
      
        <tags>
            
            <tag> JavaSE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java基础第二部分</title>
      <link href="/2022/02/19/Java%E5%9F%BA%E7%A1%80%E7%AC%AC%E4%BA%8C%E9%83%A8%E5%88%86/"/>
      <url>/2022/02/19/Java%E5%9F%BA%E7%A1%80%E7%AC%AC%E4%BA%8C%E9%83%A8%E5%88%86/</url>
      
        <content type="html"><![CDATA[<h2 id="Java学习之路"><a href="#Java学习之路" class="headerlink" title="Java学习之路"></a>Java学习之路</h2><h3 id="1-流程控制"><a href="#1-流程控制" class="headerlink" title="1.流程控制"></a>1.流程控制</h3><h4 id="1-1复合语句"><a href="#1-1复合语句" class="headerlink" title="1.1复合语句"></a>1.1复合语句</h4><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Compound</span><span class="token punctuation">{</span>   <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">int</span> x<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">;</span>        <span class="token punctuation">{</span><span class="token comment">//复合语句</span>            <span class="token keyword">int</span> y<span class="token operator">=</span><span class="token number">40</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">int</span> z<span class="token operator">=</span><span class="token number">245</span><span class="token punctuation">;</span>            <span class="token keyword">boolean</span> b<span class="token punctuation">;</span>            <span class="token punctuation">{</span><span class="token comment">//复合语句</span>                b<span class="token operator">=</span>y<span class="token operator">&gt;</span>z<span class="token punctuation">;</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token comment">//复合语句</span>        <span class="token punctuation">}</span><span class="token comment">//复合语句</span>        <span class="token class-name">String</span> word<span class="token operator">=</span><span class="token string">"hello java"</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>word<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>在上面例子中，如果在复合语句外使用变量y、z、b将会出现错误，而变量x可在整个方法体中使用。</p><h4 id="1-2条件语句"><a href="#1-2条件语句" class="headerlink" title="1.2条件语句"></a>1.2条件语句</h4><h5 id="1-2-1简单的if语句"><a href="#1-2-1简单的if语句" class="headerlink" title="1.2.1简单的if语句"></a>1.2.1简单的if语句</h5><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">if</span><span class="token punctuation">(</span>布尔表达式<span class="token punctuation">)</span><span class="token punctuation">{</span>    语句序列<span class="token punctuation">}</span></code></pre><p>布尔表达式：必要参数，表示最后返回的结果必须是一个布尔值；</p><p>语句序列：可选参数，可以是一条或多条语句，当布尔表达式的值为true时执行这些语句。</p><h5 id="1-2-2if…else语句"><a href="#1-2-2if…else语句" class="headerlink" title="1.2.2if…else语句"></a>1.2.2if…else语句</h5><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">if</span><span class="token punctuation">(</span>条件表达式<span class="token punctuation">)</span><span class="token punctuation">{</span>    语句序列<span class="token number">1</span><span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>    语句序列<span class="token number">2</span><span class="token punctuation">}</span></code></pre><p>如果条件表达式为true，则执行if后面的复合语句；如果条件表达式为false，则执行else后面的复合语句。要注意的是if语句执行的话，只可以执行一次，而如果while的条件表达式一直正确，可以一直执行下去。</p><h5 id="1-2-3if…else-if语句"><a href="#1-2-3if…else-if语句" class="headerlink" title="1.2.3if…else if语句"></a>1.2.3if…else if语句</h5><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">if</span><span class="token punctuation">(</span>条件表达式<span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    语句序列<span class="token number">1</span><span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>条件表达式<span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    语句序列<span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>条件表达式n<span class="token punctuation">)</span><span class="token punctuation">{</span>    语句序列n<span class="token punctuation">}</span></code></pre><p>条件表达式1~条件表达式n：必要参数。可以由多个表达式组成，但最后表达式的结果一定要为布尔类型。</p><p>语句序列：当条件表达式1为true时，执行语句序列1，以此类推，当条件表达式n为true时，执行语句序列n；如果要省略任意一组语句序列时，可以保留其外面的”{ }”，也可以将”{ }”替换为”；”。</p><h5 id="1-2-4switch多分支语句"><a href="#1-2-4switch多分支语句" class="headerlink" title="1.2.4switch多分支语句"></a>1.2.4switch多分支语句</h5><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">switch</span><span class="token punctuation">(</span>条件表达式<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">case</span> 常量值<span class="token number">1</span><span class="token operator">:</span>         语句块<span class="token number">1</span>         <span class="token punctuation">[</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token punctuation">]</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>    <span class="token keyword">case</span> 常数值n<span class="token operator">:</span>         语句块n         <span class="token punctuation">[</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token punctuation">]</span>    <span class="token keyword">default</span><span class="token operator">:</span>         语句块n<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>         <span class="token punctuation">[</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token punctuation">]</span><span class="token punctuation">}</span></code></pre><p>switch语句首先计算表达式的值，如果表达式的计算结果和某个case后面的常量值相同，则执行该case语句后的若干个语句直到遇到break语句为止。此时，如果该case语句没有break语句，将继续执行后面case中的若干个语句，直到遇到break语句为止。若没有一个常量的值与表达式的值相同，则执行default后面的语句。</p><h4 id="1-3循环语句"><a href="#1-3循环语句" class="headerlink" title="1.3循环语句"></a>1.3循环语句</h4><h5 id="1-3-1while循环语句"><a href="#1-3-1while循环语句" class="headerlink" title="1.3.1while循环语句"></a>1.3.1while循环语句</h5><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">while</span><span class="token punctuation">(</span>条件表达式<span class="token punctuation">)</span><span class="token punctuation">{</span>    语句序列<span class="token punctuation">}</span></code></pre><p>当条件表达式的值为真时，则执行”{ }”中的语句，当执行完语句后重新判断条件表达式的值，如果为真，继续执行”{ }“中的语句，直到条件表达式为假，跳出循环。</p><h5 id="1-3-2do…while语句"><a href="#1-3-2do…while语句" class="headerlink" title="1.3.2do…while语句"></a>1.3.2do…while语句</h5><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">do</span><span class="token punctuation">{</span>    语句序列<span class="token punctuation">}</span><span class="token keyword">while</span><span class="token punctuation">(</span>条件表达式<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>do…while循环语句必须先执行一次循环，再判断条件是否成立。也就是说，do…while循环语句”{ }”中的程序段至少要被执行一次。</p><h5 id="1-3-3for循环语句"><a href="#1-3-3for循环语句" class="headerlink" title="1.3.3for循环语句"></a>1.3.3for循环语句</h5><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">for</span><span class="token punctuation">(</span>表达式<span class="token number">1</span><span class="token punctuation">;</span>表达式<span class="token number">2</span><span class="token punctuation">;</span>表达式<span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    语句序列<span class="token punctuation">}</span></code></pre><p>在执行for循环时，首先执行表达式1，再执行表达式2，若表达式2的值为true，则进入循环，到最后执行完循环体后才执行表达式3。</p><h5 id="1-3-4foreach"><a href="#1-3-4foreach" class="headerlink" title="1.3.4foreach"></a>1.3.4foreach</h5><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">for</span><span class="token punctuation">(</span>元素类型 x<span class="token operator">:</span>遍历对象 obj<span class="token punctuation">)</span><span class="token punctuation">{</span>    引用了x的<span class="token class-name">Java</span>语句<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>foreach是for语句的特殊简化版本，不能取代for语句，但任何foreach语句都可以改写为for语句版本。foreach就单纯遍历数组用的，也没啥其他功能。</p><h4 id="1-4循环控制"><a href="#1-4循环控制" class="headerlink" title="1.4循环控制"></a>1.4循环控制</h4><p>主要是break和continue这两个关键字，break跳出当前循环体，而continue则是不跳出当前循环体，回到条件测试部分，重新开始执行循环。</p><p><a href=""><img src="https://s2.loli.net/2022/02/19/sSxpMcXGFlJm4vP.jpg"></a></p>]]></content>
      
      
      
        <tags>
            
            <tag> JavaSE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java基础第一部分</title>
      <link href="/2022/02/17/Java%E5%9F%BA%E7%A1%80%E7%AC%AC%E4%B8%80%E9%83%A8%E5%88%86/"/>
      <url>/2022/02/17/Java%E5%9F%BA%E7%A1%80%E7%AC%AC%E4%B8%80%E9%83%A8%E5%88%86/</url>
      
        <content type="html"><![CDATA[<h2 id="Java学习之路"><a href="#Java学习之路" class="headerlink" title="Java学习之路"></a>Java学习之路</h2><p>从现在开始记录我学习java的点点滴滴!!!</p><h3 id="1-Java语言基础"><a href="#1-Java语言基础" class="headerlink" title="1.Java语言基础"></a>1.Java语言基础</h3><h4 id="1-1基本数据类型"><a href="#1-1基本数据类型" class="headerlink" title="1.1基本数据类型"></a>1.1基本数据类型</h4><p>整数类型：int，byte，short，long；</p><p>浮点类型：float，double；</p><p>字符类型：char；</p><p>转义字符：详细见参考书，有点多就不介绍了；</p><h4 id="1-2变量和常量"><a href="#1-2变量和常量" class="headerlink" title="1.2变量和常量"></a>1.2变量和常量</h4><p>标识符：Java语言规定标识符由任意顺序的字母、下划线(_)、美元符号($)和数字组成，并且第一个字符不能是数字。另外，标识符不能是Java中的关键字；</p><p>关键字：详细见参考书，有点多就不介绍了；</p><p>声明变量和声明常量都差不多，变量分为成员变量和局部变量；</p><h4 id="1-3运算符"><a href="#1-3运算符" class="headerlink" title="1.3运算符"></a>1.3运算符</h4><p>赋值运算符：=;</p><p>算数运算符：+(加)，-(减)，*(乘)，/(除)，%(求余)；</p><p>自增和自减运算符：++，–；注意面试可能会问：a++和++a的区别？a++表示在使用变量之后，使a的值加1，++a表示在使用变量之前，先使a的值加1；</p><p>比较运算符：&gt;，&lt;，==，&gt;=，&lt;=，!=；</p><p>逻辑运算符：&amp;&amp;、||、!；</p><p>位运算符：按位与，按位或，按位取反，按位异或，移位操作；(详细见参考书)</p><p>三元运算符：基本格式为：条件式？值1：值2，例如以下例子：</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">boolean</span> b<span class="token operator">=</span><span class="token number">20</span><span class="token operator">&lt;</span><span class="token number">45</span><span class="token operator">?</span><span class="token boolean">true</span><span class="token operator">:</span><span class="token boolean">false</span><span class="token punctuation">;</span></code></pre><p>如果表达式为真，b取值为true，为假的化，b的取值为false；</p><p>运算符优先级:优先级由高到低的顺序依次是:1、增量和减量运算，2、算术运算，3、比较运算，4、逻辑运算，赋值运算；</p><p>数据类型转换:分为两种：1、隐式类型转换，2、显式型转换(也称强制类型转换)；类型按精度从低到高排列的顺序为byte&lt;short&lt;int&lt;long&lt;float&lt;double。从低级类型向高级类型的转换，系统将自动执行，这种类型转换称为隐式转换。例如一下例子：</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">int</span> x<span class="token operator">=</span><span class="token number">50</span><span class="token punctuation">;</span>      <span class="token comment">//声明int型变量x</span><span class="token keyword">float</span> y<span class="token operator">=</span>x<span class="token punctuation">;</span>     <span class="token comment">//将x赋值给y，y的值为50.0</span></code></pre><p>当需要把高精度的变量的值赋给低精度的变量时，必须使用显式类型转换(也称强制类型转换)，例如以下例子：</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">int</span> a<span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token number">45.23</span><span class="token punctuation">;</span><span class="token keyword">long</span> y<span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span><span class="token number">456.6F</span><span class="token punctuation">;</span><span class="token keyword">int</span> b<span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token char">'d'</span><span class="token punctuation">;</span></code></pre><p><img src="https://s2.loli.net/2022/02/17/D4J2fwbX3VPjxNt.jpg"></p>]]></content>
      
      
      
        <tags>
            
            <tag> JavaSE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Second Blog</title>
      <link href="/2022/02/13/Second-Blog/"/>
      <url>/2022/02/13/Second-Blog/</url>
      
        <content type="html"><![CDATA[<p><a href=""><img src="https://s2.loli.net/2022/02/13/pc9BjNOhqZURinS.jpg" alt="1.jpg"></a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>First Blog</title>
      <link href="/2022/02/10/JAVA%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/"/>
      <url>/2022/02/10/JAVA%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/</url>
      
        <content type="html"><![CDATA[<h2 id="JAVA学习之路"><a href="#JAVA学习之路" class="headerlink" title="JAVA学习之路"></a>JAVA学习之路</h2><h3 id="第一章：Java基础篇"><a href="#第一章：Java基础篇" class="headerlink" title="第一章：Java基础篇"></a>第一章：Java基础篇</h3><p><img src="https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fcomic.people.com.cn%2FNMediaFile%2F2013%2F1024%2FMAIN201310241547000169021039271.jpg&amp;refer=http%3A%2F%2Fcomic.people.com.cn&amp;app=2002&amp;size=f9999,10000&amp;q=a80&amp;n=0&amp;g=0n&amp;fmt=jpeg?sec=1647096632&amp;t=e22be2bd586615079f7a5b8b60529d4c" alt="1"></p><h4 id="1-初识Java"><a href="#1-初识Java" class="headerlink" title="1.初识Java"></a>1.初识Java</h4><p>Java是一门面向对象的程序设计语言。使用java语言编写的程序是跨平台的，从PC到智能手机，到处都运行着Java开发的程序和游戏。java程序可以在任何计算机、操作系统以及支持java的硬件设备上运行。</p><h4 id="2-Java的特性"><a href="#2-Java的特性" class="headerlink" title="2.Java的特性"></a>2.Java的特性</h4><h5 id="1-简单"><a href="#1-简单" class="headerlink" title="1.简单"></a>1.简单</h5><p>Java语言的语法简单明了，容易掌握，而且是纯面向对象的语言。</p><h5 id="2-面向对象-oop"><a href="#2-面向对象-oop" class="headerlink" title="2.面向对象(oop)"></a>2.面向对象(oop)</h5><p>面向对象是Java语言的基础，也是Java语言的重要特性。</p><h5 id="3-分布性"><a href="#3-分布性" class="headerlink" title="3.分布性"></a>3.分布性</h5><p>Java的分布性包括操作分布和数据分布，其中操作分布是指在多个不同的主机上布置相关操作，而数据分布是将数据分别存放在多个不同的主机上，这些主机是网络中的不同成员。</p><p><img src="https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fn.sinaimg.cn%2Ftranslate%2F601%2Fw584h817%2F20190921%2F0dd4-iewtena2040082.jpg&amp;refer=http%3A%2F%2Fn.sinaimg.cn&amp;app=2002&amp;size=f9999,10000&amp;q=a80&amp;n=0&amp;g=0n&amp;fmt=jpeg?sec=1647097293&amp;t=68b0efec41e0df98f7a97830739cf3f6" alt="2"></p><h2 id="第一次博客测试，谢谢！！！！！"><a href="#第一次博客测试，谢谢！！！！！" class="headerlink" title="第一次博客测试，谢谢！！！！！"></a>第一次博客测试，谢谢！！！！！</h2>]]></content>
      
      
      <categories>
          
          <category> 说明 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
